# This file helps us easily spin up our Postgres and Redis databases in local
# development (this is not meant to be used in production), bypassing the need
# to install and configure these services on our local machines.

version: '3.9'

services:
  postgres:
    container_name: oyster-postgres
    image: postgres:15-alpine
    ports:
      # We're using port 5433 to avoid any potential conflicts.
      - 5433:5432
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: oyster
      POSTGRES_PASSWORD: oyster
      POSTGRES_USER: oyster
    networks:
      - network1

  postgres-test:
    container_name: oyster-postgres-test
    image: postgres:15-alpine
    ports:
      # We're using port 5434 to avoid any potential conflicts.
      - 5434:5432
    environment:
      POSTGRES_DB: oyster_test
      POSTGRES_PASSWORD: oyster
      POSTGRES_USER: oyster

  pgadmin:
    container_name: oyster_pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-oyster@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-oyster}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    volumes:
      - ./pgAdmin/servers.json:/pgadmin4/servers.json
      - pgadmin:/var/lib/pgadmin
    ports:
      - '${PGADMIN_PORT:-5050}:80'
    networks:
      - network1

  redis:
    container_name: oyster-redis
    image: redis:latest
    ports:
      - 6380:6379
    volumes:
      - redis_data:/data

volumes:
  pg_data:
  redis_data:
  pgadmin:

networks:
  network1:
    name: my-network
    attachable: true
    ipam:
      driver: default
      config:
        - subnet: 172.18.0.0/16
          ip_range: 172.18.5.0/24
          gateway: 172.18.0.1
